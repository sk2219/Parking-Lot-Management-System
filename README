class CircularQueue:
    def __init__(self, size):
        self.size = size
        self.queue = [None] * size
        self.front = -1
        self.rear = -1

    def is_full(self):
        return (self.rear + 1) % self.size == self.front

    def is_empty(self):
        return self.front == -1

    def enqueue(self, vehicle):
        if self.is_full():
            print("Parking lot is full. No more vehicles can enter.")
            return False
        if self.is_empty():
            self.front = 0
        
        self.rear = (self.rear + 1) % self.size
        self.queue[self.rear] = vehicle
        print(f"Vehicle {vehicle} parked at slot {self.rear}.")
        return True

    def dequeue(self):
        if self.is_empty():
            print("Parking lot is empty. No vehicles to exit.")
            return None
        exiting_vehicle = self.queue[self.front]
        print(f"Vehicle {exiting_vehicle} exited from slot {self.front}.")
        
        if self.front == self.rear:
            self.front = self.rear = -1  # Reset when last vehicle exits
        else:
            self.front = (self.front + 1) % self.size
        
        return exiting_vehicle
    
    def display(self):
        if self.is_empty():
            print("Parking lot is empty.")
            return
        
        index = self.front
        print("Current Parking Lot Status:")
        while True:
            print(f"Slot {index}: {self.queue[index]}")
            if index == self.rear:
                break
            index = (index + 1) % self.size

# User Input Handling
if __name__ == "__main__":
    size = int(input("Enter the size of the parking lot: "))
    parking_lot = CircularQueue(size)
    
    while True:
        print("\nOptions: 1. Park Vehicle\n  2. Remove Vehicle \n 3. Display Status\n  4. Exit")
        choice = int(input("Enter your choice: "))
        
        if choice == 1:
            vehicle = input("Enter vehicle number: ")
            parking_lot.enqueue(vehicle)
        elif choice == 2:
            parking_lot.dequeue()
        elif choice == 3:
            parking_lot.display()
        elif choice == 4:
            print("Exiting program.")
            break
        else:
            print("Invalid choice. Please try again.")

